router.post('/register', async (req, res) => {
  const { username, email, password } = req.body;
  console.log('Datos recibidos:', { username, email, password });

  try {
    const hashedPassword = await bcrypt.hash(password, 10);
    console.log('Contrase침a encriptada:', hashedPassword);

    const userCheck = await pool.query('SELECT * FROM users WHERE email = $1', [email]);
    console.log('Resultado de verificaci칩n del usuario:', userCheck.rows);

    if (userCheck.rows.length > 0) {
      return res.status(400).json({ message: 'El correo electr칩nico ya est치 registrado' });
    }

    await pool.query(
      'INSERT INTO users (username, email, password) VALUES ($1, $2, $3)',
      [username, email, hashedPassword]
    );

    console.log('Usuario registrado exitosamente');
    res.status(201).json({ message: 'Usuario registrado exitosamente' });
  } catch (error) {
    console.error('Error al registrar el usuario:', error);
    res.status(500).json({ message: 'Error del servidor al registrar el usuario' });
  }
});
